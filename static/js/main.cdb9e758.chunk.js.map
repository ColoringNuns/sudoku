{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["scrambleSudoku","boards","board","Math","floor","random","length","lineflips","i","flipLines","blockflips","flipBlocks","rotations","rotateBoard","times","j","ceasarCipher","vboard","copy","round","box","col1","col2","row1","row2","y","x","reverse","o","output","v","key","Array","isArray","App","state","sudoku","drawSudoku","_this","final","nextLine","push","react_default","a","createElement","className","onClick","setState","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cdb9e758.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    sudoku: null\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.drawSudoku()}\n      </div>\n    );\n  }\n\n  drawSudoku = () => {\n    if (this.state.sudoku !== null) {\n      let final = [];\n      for (let i = 0; i < 9; i++) {\n        let nextLine = [];\n        for (let j = 0; j < 9; j++) {\n          if (this.state.sudoku[i][j] !== 0) {\n            nextLine.push(\n              <td className=\"nonclickable\" key={\"Cell \" + i + \" \" + j}>{this.state.sudoku[i][j]}</td>\n            );\n          } else {\n            nextLine.push(\n              <td className=\"clickable\" key={\"Cell \" + i + \" \" + j} />\n            );\n          }\n        }\n        final.push(\n          <tr key={\"Row \" + i}>{nextLine}</tr>\n        );\n      }\n      return <table><tbody>{final}</tbody></table>;\n    } else {\n      return <button className=\"btn GenerateButton\" onClick={() => {\n        this.setState({ sudoku: scrambleSudoku() });\n      }}>Generate Sudoku</button>;\n    }\n  }\n\n}\n\nfunction scrambleSudoku() {\n  const boards = [\n    [\n      [0,0,8,1,0,0,0,9,0],\n      [0,0,9,0,0,2,0,0,0],\n      [0,0,3,0,0,7,6,0,2],\n      [1,7,0,8,0,0,0,0,4],\n      [0,0,0,0,0,0,0,0,0],\n      [5,0,0,0,0,4,0,7,8],\n      [9,0,1,4,0,0,2,0,0],\n      [0,0,0,2,0,0,9,0,0],\n      [0,6,0,0,0,1,4,0,0]\n    ],\n    [\n      [0,4,0,0,0,2,3,8,0],\n      [0,0,0,0,6,0,0,0,0],\n      [0,8,7,0,0,0,0,9,0],\n      [0,9,1,0,8,0,0,0,0],\n      [4,0,0,0,1,0,0,0,6],\n      [0,0,0,0,2,0,8,4,0],\n      [0,1,0,0,0,0,5,7,0],\n      [0,0,0,0,9,0,0,0,0],\n      [0,3,9,5,0,0,0,1,0]\n    ],\n    [\n      [0,7,0,2,0,0,0,6,5],\n      [0,0,0,0,0,0,0,8,0],\n      [0,0,2,0,5,0,4,0,1],\n      [0,8,0,0,0,5,0,0,0],\n      [7,0,6,0,0,0,1,0,4],\n      [0,0,0,6,0,0,0,7,0],\n      [4,0,9,0,3,0,6,0,0],\n      [0,2,0,0,0,0,0,0,0],\n      [1,3,0,0,0,9,0,2,0]\n    ],\n  ];\n\n  let board = boards[Math.floor(Math.random() * boards.length)];\n  const lineflips = Math.floor(Math.random() * 100);\n  for (let i = 0; i < lineflips; i++)\n    board = flipLines(board);\n  const blockflips = Math.floor(Math.random() * 20);\n  for (let i = 0; i < blockflips; i++)\n    board = flipBlocks(board);\n  const rotations = Math.floor(Math.random() * 5);\n  for (let i = 0; i < rotations; i++)\n    board = rotateBoard(board);\n  const perms = Math.floor(Math.random() * 10);\n  board = ceasarCipher(board,perms);\n\n  return board;\n}\n\nfunction ceasarCipher(board,times) {\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      if (board[i][j] > 0) {\n        board[i][j] = board[i][j] + times;\n        if (board[i][j] > 9) {\n          board[i][j] = board[i][j] - 9;\n        }\n      }\n    }\n  }\n  return board;\n}\n\nfunction flipLines(board) {\n  let vboard = copy(board);\n  if (Math.round(Math.random()) === 0) {\n    board = rotateBoard(board);\n    vboard = copy(board);\n    const box = Math.floor(Math.random() * 3) * 3;\n    const col1 = Math.floor(Math.random() * 3) + box;\n    const col2 = Math.floor(Math.random() * 3) + box;\n    vboard[col1] = board[col2];\n    vboard[col2] = board[col1];\n  } else {\n    const box = Math.floor(Math.random() * 3) * 3;\n    const row1 = Math.floor(Math.random() * 3) + box;\n    const row2 = Math.floor(Math.random() * 3) + box;\n    vboard[row1] = board[row2];\n    vboard[row2] = board[row1];\n  }\n  return vboard;\n}\n\nfunction flipBlocks(board) {\n  let vboard = copy(board);\n  if (Math.round(Math.random()) === 0) {\n    board = rotateBoard(board);\n    vboard = copy(board);\n    const col1 = Math.floor(Math.random() * 3) * 3;\n    const col2 = Math.floor(Math.random() * 3) * 3;\n    vboard[col1] = board[col2];\n    vboard[col1 + 1] = board[col2 + 1];\n    vboard[col1 + 2] = board[col2 + 2];\n    vboard[col2] = board[col1];\n    vboard[col2 + 1] = board[col1 + 1];\n    vboard[col2 + 2] = board[col1 + 2];\n  } else {\n    const row1 = Math.floor(Math.random() * 3) * 3;\n    const row2 = Math.floor(Math.random() * 3) * 3;\n    vboard[row1] = board[row2];\n    vboard[row1 + 1] = board[row2 + 1];\n    vboard[row1 + 2] = board[row2 + 2];\n    vboard[row2] = board[row1];\n    vboard[row2 + 1] = board[row1 + 1];\n    vboard[row2 + 2] = board[row1 + 2];\n  }\n  return vboard;\n}\n\nfunction rotateBoard(board) {\n  var vboard = [];\n  for (let y = 0; y < 9; y++) {\n    vboard[y] = [];\n    for (let x = 0; x < 9; x++) {\n      vboard[y][x] = board[x][y];\n    }\n  }\n  for (let y = 0; y < 9; y++) {\n    vboard[y].reverse();\n  }\n  return vboard;\n}\n\nfunction copy(o) {\n  var output, v, key;\n  output = Array.isArray(o) ? [] : {};\n  for (key in o) {\n    v = o[key];\n    output[key] = (typeof v === \"object\") ? copy(v) : v;\n  }\n  return output;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}