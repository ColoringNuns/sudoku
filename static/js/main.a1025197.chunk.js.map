{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["scrambleSudoku","boards","board","Math","floor","random","length","lineflips","i","flipLines","blockflips","flipBlocks","rotations","rotateBoard","vboard","j","turnTo1D","times","ceasarCipher","copy","round","box","col1","col2","row1","row2","y","x","reverse","o","output","v","key","Array","isArray","unsolve","listPos","a","_ref","shuffle","num","final","allList","pos","original","solve","notConflicting","row","col","r","c","left","top","solveCell","index","next_cells","cell","solutions","push","emptyCells","App","state","sudoku","drawSudoku","_this","nextLine","react_default","createElement","className","onClick","setState","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+NA0DA,SAASA,IAuCP,IAtCA,IAAMC,EAAS,CACb,CACE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAEnB,CACE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAEnB,CACE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAIjBC,EAAQD,EAAOE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAOK,SAC/CC,EAAYJ,KAAKC,MAAsB,IAAhBD,KAAKE,UACzBG,EAAI,EAAGA,EAAID,EAAWC,IAC7BN,EAAQO,EAAUP,GAEpB,IADA,IAAMQ,EAAaP,KAAKC,MAAsB,GAAhBD,KAAKE,UAC1BG,EAAI,EAAGA,EAAIE,EAAYF,IAC9BN,EAAQS,EAAWT,GAErB,IADA,IAAMU,EAAYT,KAAKC,MAAsB,EAAhBD,KAAKE,UACzBG,EAAI,EAAGA,EAAII,EAAWJ,IAC7BN,EAAQW,EAAYX,GAItB,OA7DF,SAAkBA,GAEhB,IADA,IAAIY,EAAS,GACJN,EAAI,EAAGA,EAAIN,EAAMI,OAAQE,IAChC,IAAK,IAAIO,EAAI,EAAGA,EAAIb,EAAMM,GAAGF,OAAQS,IACnCD,EAAOA,EAAOR,QAAUJ,EAAMM,GAAGO,GAIrC,OAAOD,EAqDAE,CAFPd,EAKF,SAAsBA,EAAMe,GAC1B,IAAK,IAAIT,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIO,EAAI,EAAGA,EAAI,EAAGA,IACrBb,EAAMM,GAAGO,GAAKb,EAAMM,GAAGO,GAAKE,EACxBf,EAAMM,GAAGO,GAAK,IAChBb,EAAMM,GAAGO,GAAKb,EAAMM,GAAGO,GAAK,GAIlC,OAAOb,EAdCgB,CAAahB,EADPC,KAAKC,MAAsB,GAAhBD,KAAKE,YAkBhC,SAASI,EAAUP,GACjB,IAAIY,EAASK,EAAKjB,GAClB,GAAkC,IAA9BC,KAAKiB,MAAMjB,KAAKE,UAAiB,CAEnCS,EAASK,EADTjB,EAAQW,EAAYX,IAEpB,IAAMmB,EAAsC,EAAhClB,KAAKC,MAAsB,EAAhBD,KAAKE,UACtBiB,EAAOnB,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgBgB,EACvCE,EAAOpB,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgBgB,EAC7CP,EAAOQ,GAAQpB,EAAMqB,GACrBT,EAAOS,GAAQrB,EAAMoB,OAChB,CACL,IAAMD,EAAsC,EAAhClB,KAAKC,MAAsB,EAAhBD,KAAKE,UACtBmB,EAAOrB,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgBgB,EACvCI,EAAOtB,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgBgB,EAC7CP,EAAOU,GAAQtB,EAAMuB,GACrBX,EAAOW,GAAQvB,EAAMsB,GAEvB,OAAOV,EAGT,SAASH,EAAWT,GAClB,IAAIY,EAASK,EAAKjB,GAClB,GAAkC,IAA9BC,KAAKiB,MAAMjB,KAAKE,UAAiB,CAEnCS,EAASK,EADTjB,EAAQW,EAAYX,IAEpB,IAAMoB,EAAuC,EAAhCnB,KAAKC,MAAsB,EAAhBD,KAAKE,UACvBkB,EAAuC,EAAhCpB,KAAKC,MAAsB,EAAhBD,KAAKE,UAC7BS,EAAOQ,GAAQpB,EAAMqB,GACrBT,EAAOQ,EAAO,GAAKpB,EAAMqB,EAAO,GAChCT,EAAOQ,EAAO,GAAKpB,EAAMqB,EAAO,GAChCT,EAAOS,GAAQrB,EAAMoB,GACrBR,EAAOS,EAAO,GAAKrB,EAAMoB,EAAO,GAChCR,EAAOS,EAAO,GAAKrB,EAAMoB,EAAO,OAC3B,CACL,IAAME,EAAuC,EAAhCrB,KAAKC,MAAsB,EAAhBD,KAAKE,UACvBoB,EAAuC,EAAhCtB,KAAKC,MAAsB,EAAhBD,KAAKE,UAC7BS,EAAOU,GAAQtB,EAAMuB,GACrBX,EAAOU,EAAO,GAAKtB,EAAMuB,EAAO,GAChCX,EAAOU,EAAO,GAAKtB,EAAMuB,EAAO,GAChCX,EAAOW,GAAQvB,EAAMsB,GACrBV,EAAOW,EAAO,GAAKvB,EAAMsB,EAAO,GAChCV,EAAOW,EAAO,GAAKvB,EAAMsB,EAAO,GAElC,OAAOV,EAGT,SAASD,EAAYX,GAEnB,IADA,IAAIY,EAAS,GACJY,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1BZ,EAAOY,GAAK,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACrBb,EAAOY,GAAGC,GAAKzB,EAAMyB,GAAGD,GAG5B,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IACrBZ,EAAOY,GAAGE,UAEZ,OAAOd,EAGT,SAASK,EAAKU,GACZ,IAAIC,EAAQC,EAAGC,EAEf,IAAKA,KADLF,EAASG,MAAMC,QAAQL,GAAK,GAAK,GACrBA,EACVE,EAAIF,EAAEG,GACNF,EAAOE,GAAqB,kBAAND,EAAkBZ,EAAKY,GAAKA,EAEpD,OAAOD,EAGT,SAASK,EAAQjC,GAGf,IAFA,IAAIkC,EAyBN,SAAiBC,GACf,IAAK,IAAI7B,EAAI6B,EAAE/B,OAAS,EAAGE,EAAI,EAAGA,IAAK,CACrC,IAAMO,EAAIZ,KAAKC,MAAMD,KAAKE,UAAYG,EAAI,IADL8B,EAEtB,CAACD,EAAEtB,GAAIsB,EAAE7B,IAAvB6B,EAAE7B,GAFkC8B,EAAA,GAE9BD,EAAEtB,GAF4BuB,EAAA,GAIvC,OAAOD,EA9BOE,CAiBhB,SAAiBC,GAEf,IADA,IAAMC,EAAQ,GACLjC,EAAI,EAAGA,EAAIgC,EAAKhC,IACvBiC,EAAMA,EAAMnC,QAAUE,EAExB,OAAOiC,EAtBeC,CAAQ,KAErBlC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAImC,EAAMP,EAAQ5B,GACZoC,EAAW1C,EAAMyC,GAEvBzC,EAAMyC,GAAO,EAGK,IADAE,EAAM3C,KAEtBA,EAAMyC,GAAOC,GAIjB,OAAO1C,EAmBT,SAAS4C,EAAe5C,EAAM6C,EAAIC,GAEhC,IADA,IAAMjB,EAAI7B,EAAY,EAAN6C,EAAUC,GACjBC,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAI/C,EAAU,EAAJ+C,EAAQD,KAASjB,GAAKkB,IAAMF,EAAK,OAAO,EACpD,IAAK,IAAIG,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAIhD,EAAY,EAAN6C,EAAUG,KAAOnB,GAAKmB,IAAMF,EAAK,OAAO,EAGpD,IAFA,IAAIG,EAAO,EAAIhD,KAAKC,MAAM4C,EAAM,GAC5BI,EAAM,EAAIjD,KAAKC,MAAM2C,EAAM,GACtBE,EAAIG,EAAKH,EAAIG,EAAM,EAAGH,IAC7B,IAAK,IAAIC,EAAIC,EAAMD,EAAIC,EAAO,EAAGD,IAC/B,GAAIhD,EAAU,EAAJ+C,EAAQC,KAAOnB,GAAKmB,IAAMF,GAAOC,IAAMF,EAAK,OAAO,EACjE,OAAO,EA6BT,SAASF,EAAM3C,GACb,OAnBF,SAASmD,EAAUnD,EAAMoD,EAAMC,GAC7B,GAAIA,EAAWjD,SAAWgD,EACxB,OAAO,EAMT,IAJA,IAAME,EAAOD,EAAWD,GAClBP,EAA6B,EAAvB5C,KAAKC,MAAMoD,EAAO,GACxBR,EAAMQ,EAAO,EACfC,EAAY,EACPjD,EAAI,EAAGA,EAAI,EAAGA,IACrBN,EAAMsD,GAAQhD,EAAI,EACdsC,EAAe5C,EAAM6C,EAAIC,KAC3BS,GAAaJ,EAAUnD,EAAMoD,EAAQ,EAAEC,IAI3C,OADArD,EAAMsD,GAAQ,EACPC,EAIAJ,CAAUnD,EAAM,EA3BzB,SAAoBA,GAElB,IADA,IAAMmC,EAAI,GACD7B,EAAI,EAAGA,EAAI,GAAIA,IACL,IAAbN,EAAMM,IACR6B,EAAEqB,KAAKlD,GACX,OAAO6B,EAsBkBsB,CAAWzD,IAGvB0D,iNA3QbC,MAAQ,CACNC,OAAQ,QAWVC,WAAa,WACX,GAA0B,OAAtBC,EAAKH,MAAMC,OAAiB,CAE9B,IADA,IAAIrB,EAAQ,GACHjC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAIyD,EAAW,GACNlD,EAAI,EAAGA,EAAI,EAAGA,IACgB,IAAjCiD,EAAKH,MAAMC,OAAW,EAAJtD,EAAQO,GAC5BkD,EAASP,KACPQ,EAAA7B,EAAA8B,cAAA,MAAInC,IAAK,QAAUxB,EAAI,IAAMO,GAAIiD,EAAKH,MAAMC,OAAW,EAAJtD,EAAQO,KAG7DkD,EAASP,KACPQ,EAAA7B,EAAA8B,cAAA,MAAInC,IAAK,QAAUxB,EAAI,IAAMO,KAInC0B,EAAMiB,KACJQ,EAAA7B,EAAA8B,cAAA,MAAInC,IAAK,OAASxB,GAAIyD,IAG1B,OAAOC,EAAA7B,EAAA8B,cAAA,aAAOD,EAAA7B,EAAA8B,cAAA,aAAQ1B,IAEtB,OAAOyB,EAAA7B,EAAA8B,cAAA,UAAQC,UAAU,qBAAqBC,QAAS,WACrDL,EAAKM,SAAS,CAAER,OAAQ3B,EAAQnC,SAD3B,4FA7BT,OACEkE,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,OACZG,KAAKR,qBARIS,aCSEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOb,EAAA7B,EAAA8B,cAACa,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a1025197.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    sudoku: null\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.drawSudoku()}\n      </div>\n    );\n  }\n\n  drawSudoku = () => {\n    if (this.state.sudoku !== null) {\n      let final = [];\n      for (let i = 0; i < 9; i++) {\n        let nextLine = [];\n        for (let j = 0; j < 9; j++) {\n          if (this.state.sudoku[i * 9 + j] !== 0) {\n            nextLine.push(\n              <td key={\"Cell \" + i + \" \" + j}>{this.state.sudoku[i * 9 + j]}</td>\n            );\n          } else {\n            nextLine.push(\n              <td key={\"Cell \" + i + \" \" + j} />\n            );\n          }\n        }\n        final.push(\n          <tr key={\"Row \" + i}>{nextLine}</tr>\n        );\n      }\n      return <table><tbody>{final}</tbody></table>;\n    } else {\n      return <button className=\"btn GenerateButton\" onClick={() => {\n        this.setState({ sudoku: unsolve(scrambleSudoku()) });\n      }}>Generate Sudoku</button>;\n    }\n  }\n\n}\n\n\nfunction turnTo1D(board) {\n  let vboard = [];\n  for (let i = 0; i < board.length; i++) {\n    for (let j = 0; j < board[i].length; j++) {\n      vboard[vboard.length] = board[i][j];\n    }\n  }\n\n  return vboard;\n}\n\nfunction scrambleSudoku() {\n  const boards = [\n    [\n      [5,3,4,6,7,8,9,1,2],\n      [6,7,2,1,9,5,3,4,8],\n      [1,9,8,3,4,2,5,6,7],\n      [8,5,9,7,6,1,4,2,3],\n      [4,2,6,8,5,3,7,9,1],\n      [7,1,3,9,2,4,8,5,6],\n      [9,6,1,5,3,7,2,8,4],\n      [2,8,7,4,1,9,6,3,5],\n      [3,4,5,2,8,6,1,7,9]\n    ],\n    [\n      [5,3,9,6,7,4,1,8,2],\n      [7,1,6,2,8,9,3,4,5],\n      [8,2,4,5,3,1,7,6,9],\n      [6,9,5,8,1,7,4,2,3],\n      [1,4,7,3,9,2,8,5,6],\n      [2,8,3,4,5,6,9,7,1],\n      [9,6,1,7,4,5,2,3,8],\n      [4,5,8,1,2,3,6,9,7],\n      [3,7,2,9,6,8,5,1,4]\n    ],\n    [\n      [4,5,2,3,9,1,8,7,6],\n      [3,1,8,6,7,5,2,9,4],\n      [6,7,9,4,2,8,3,1,5],\n      [8,3,1,5,6,4,7,2,9],\n      [2,4,5,9,8,7,1,6,3],\n      [9,6,7,2,1,3,5,4,8],\n      [7,9,6,8,5,2,4,3,1],\n      [1,8,3,7,4,9,6,5,2],\n      [5,2,4,1,3,6,9,8,7]\n    ]\n  ];\n\n  let board = boards[Math.floor(Math.random() * boards.length)];\n  const lineflips = Math.floor(Math.random() * 100);\n  for (let i = 0; i < lineflips; i++)\n    board = flipLines(board);\n  const blockflips = Math.floor(Math.random() * 20);\n  for (let i = 0; i < blockflips; i++)\n    board = flipBlocks(board);\n  const rotations = Math.floor(Math.random() * 5);\n  for (let i = 0; i < rotations; i++)\n    board = rotateBoard(board);\n  const perms = Math.floor(Math.random() * 10);\n  board = ceasarCipher(board,perms);\n\n  return turnTo1D(board);\n}\n\nfunction ceasarCipher(board,times) {\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      board[i][j] = board[i][j] + times;\n      if (board[i][j] > 9) {\n        board[i][j] = board[i][j] - 9;\n      }\n    }\n  }\n  return board;\n}\n\nfunction flipLines(board) {\n  let vboard = copy(board);\n  if (Math.round(Math.random()) === 0) {\n    board = rotateBoard(board);\n    vboard = copy(board);\n    const box = Math.floor(Math.random() * 3) * 3;\n    const col1 = Math.floor(Math.random() * 3) + box;\n    const col2 = Math.floor(Math.random() * 3) + box;\n    vboard[col1] = board[col2];\n    vboard[col2] = board[col1];\n  } else {\n    const box = Math.floor(Math.random() * 3) * 3;\n    const row1 = Math.floor(Math.random() * 3) + box;\n    const row2 = Math.floor(Math.random() * 3) + box;\n    vboard[row1] = board[row2];\n    vboard[row2] = board[row1];\n  }\n  return vboard;\n}\n\nfunction flipBlocks(board) {\n  let vboard = copy(board);\n  if (Math.round(Math.random()) === 0) {\n    board = rotateBoard(board);\n    vboard = copy(board);\n    const col1 = Math.floor(Math.random() * 3) * 3;\n    const col2 = Math.floor(Math.random() * 3) * 3;\n    vboard[col1] = board[col2];\n    vboard[col1 + 1] = board[col2 + 1];\n    vboard[col1 + 2] = board[col2 + 2];\n    vboard[col2] = board[col1];\n    vboard[col2 + 1] = board[col1 + 1];\n    vboard[col2 + 2] = board[col1 + 2];\n  } else {\n    const row1 = Math.floor(Math.random() * 3) * 3;\n    const row2 = Math.floor(Math.random() * 3) * 3;\n    vboard[row1] = board[row2];\n    vboard[row1 + 1] = board[row2 + 1];\n    vboard[row1 + 2] = board[row2 + 2];\n    vboard[row2] = board[row1];\n    vboard[row2 + 1] = board[row1 + 1];\n    vboard[row2 + 2] = board[row1 + 2];\n  }\n  return vboard;\n}\n\nfunction rotateBoard(board) {\n  var vboard = [];\n  for (let y = 0; y < 9; y++) {\n    vboard[y] = [];\n    for (let x = 0; x < 9; x++) {\n      vboard[y][x] = board[x][y];\n    }\n  }\n  for (let y = 0; y < 9; y++) {\n    vboard[y].reverse();\n  }\n  return vboard;\n}\n\nfunction copy(o) {\n  var output, v, key;\n  output = Array.isArray(o) ? [] : {};\n  for (key in o) {\n    v = o[key];\n    output[key] = (typeof v === \"object\") ? copy(v) : v;\n  }\n  return output;\n}\n\nfunction unsolve(board) {\n  let listPos = shuffle(allList(81));\n\n  for (let i = 0; i < 81; i++) {\n    let pos = listPos[i];\n    const original = board[pos];\n\n    board[pos] = 0;\n\n    const solutions = solve(board);\n    if (solutions !== 1) {\n      board[pos] = original;\n    }\n  }\n\n  return board;\n}\n\nfunction allList(num) {\n  const final = [];\n  for (let i = 0; i < num; i++) {\n    final[final.length] = i;\n  }\n  return final;\n}\n\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nfunction notConflicting(board,row,col) {\n  const v = board[row * 9 + col];\n  for (let r = 0; r < 9; r++)\n    if (board[r * 9 + col] === v && r !== row) return 0;\n  for (let c = 0; c < 9; c++)\n    if (board[row * 9 + c] === v && c !== col) return 0;\n  let left = 3 * Math.floor(col / 3);\n  let top = 3 * Math.floor(row / 3);\n  for (let r = top; r < top + 3; r++)\n    for (let c = left; c < left + 3; c++)\n      if (board[r * 9 + c] === v && c !== col && r !== row) return 0;\n  return 1;\n}\n\nfunction emptyCells(board) {\n  const a = [];\n  for (let i = 0; i < 81; i++)\n    if (board[i] === 0)\n      a.push(i);\n  return a;\n}\n\nfunction solveCell(board,index,next_cells) {\n  if (next_cells.length === index) {\n    return 1;\n  }\n  const cell = next_cells[index];\n  const row = Math.floor(cell / 9) | 0;\n  const col = cell % 9;\n  let solutions = 0;\n  for (let i = 0; i < 9; i++) {\n    board[cell] = i + 1;\n    if (notConflicting(board,row,col)) {\n      solutions += solveCell(board,index + 1,next_cells);\n    }\n  }\n  board[cell] = 0;\n  return solutions;\n}\n\nfunction solve(board) {\n  return solveCell(board,0,emptyCells(board));\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}